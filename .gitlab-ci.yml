image: docker:latest

stages:
  - build
  - test
  - production

variables:
#  DATABASE_URL: 'mongodb://mongo/user_posts'
  VERSION: '1.0'
  APP_IP: '35.240.14.156'

#before_script:
#  - cd reddit
#  - bundle install

build:
  stage: build
#  services:
#    - mongo:latest
  script:
#    - ruby simpletest.rb
    - docker build -t reddit:$VERSION reddit/
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker tag reddit:$VERSION $CI_REGISTRY_USER/otus-reddit:$VERSION
    - docker push $CI_REGISTRY_USER/otus-reddit:$VERSION

test:
  stage: test
  script:
    - docker run --name test_unit -d $CI_REGISTRY_USER/otus-reddit:$VERSION
    - docker exec -i test_unit ruby -Creddit simpletest.rb
    - docker rm -f test_unit

#test_integration_job:
#  stage: test
#  script:
#    - echo 'Testing 2'
#
#deploy_dev_job:
#  stage: review
#  script:
#    - echo 'Deploy'
#  environment:
#    name: dev
#    url: http://dev.example.com
#
#branch review:
#  stage: review
#  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
#  environment:
#    name: branch/$CI_COMMIT_REF_NAME
#    url: http://$CI_ENVIRONMENT_SLUG.example.com
#  only:
#    - branches
#  except:
#    - master
#
#staging:
#  stage: stage
#  only:
#    - /^\d+\.\d+\.\d+/
#  when: manual
#  script:
#  - echo 'Deploy'
#  environment:
#    name: stage
#    url: https://beta.example.com


production deploy:
  stage: production
#  only:
#    - /^\d+\.\d+\.\d+/
  image: ruby:2.4.2
  when: manual
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh appuser@$APP_IP "docker rm -f reddit || true && docker run --name reddit -d -p 9292:9292 $CI_REGISTRY_USER/otus-reddit:$VERSION"
  environment:
    name: production
    url: http://$APP_IP:9292
